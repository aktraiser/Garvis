[package]
name = "gravis-app"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
edition = "2021"
default-run = "gravis-app"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "gravis-app"
path = "src/main.rs"

[lib]
# The `_lib` suffix may seem redundant but it is necessary
# to make the lib name unique and wouldn't conflict with the bin name.
# This seems to be only an issue on Windows, see https://github.com/rust-lang/cargo/issues/8519
name = "gravis_app_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
tauri = { version = "2", features = ["macos-private-api"] }
tauri-plugin-opener = "2"
serde = { version = "1", features = ["derive"] }
serde_json = "1"

# === Phase 1 RAG: Core Dependencies (Ajout progressif) ===
# Async & Utils (base robuste)
tokio = { version = "1.0", features = ["full"] }
anyhow = "1.0"
thiserror = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Hash et cache (pour embeddings)
blake3 = "1.5"

# Collections thread-safe
dashmap = "5.5"

# UUID pour les IDs uniques
uuid = { version = "1.0", features = ["v4", "serde"] }

# === Phase 2 RAG: ML & Embeddings ===
# Candle ecosystem - stable 0.6.x series (production tested)
candle-core = "0.6.0"
candle-nn = "0.6.0"
candle-transformers = "0.6.0"

# Compatible ML ecosystem avec features nécessaires - mise à jour vers 0.4.3 (fix URL bug)
hf-hub = { version = "0.4.3", features = ["tokio"] }
tokenizers = "0.15.2"

# Qdrant client pour la vectorisation - version 1.15.0 compatible avec serveur 1.15.5
qdrant-client = "1.15.0"

# Futures pour async
futures = "0.3"

# HTTP client pour Qdrant REST API (workaround gRPC issues)
reqwest = { version = "0.12", features = ["json"] }

# === Fixes pour compatibilité f16/rand (fix de la recherche) ===
# Pin problematic dependencies pour éviter les erreurs de compilation
rand = "=0.8.5"
rand_distr = "=0.4.3"
half = "=2.3.1"

# === Benchmark Dependencies ===
# Pour l'outil de benchmark de performance
chrono = { version = "0.4", features = ["serde"] }
num_cpus = "1.16"
clap = { version = "4.4", features = ["derive"] }
once_cell = "1.19"

# === Phase 4 OCR: Tesseract Integration + PDF Pipeline ===
# NOTE: leptess temporairement désactivé due to leptonica compatibility issues
# leptess = "0.12"              # Tesseract Rust bindings (incompatible avec leptonica 1.86)
image = "0.25"                # Manipulation d'images
imageproc = "0.25"            # Preprocessing avancé (Otsu, transformations)
regex = "1.10"                # Text post-processing + document classification
lru = "0.12"                  # Cache LRU pour résultats OCR

# PDF processing hybride intelligent (Original - peut causer des problèmes macOS)
# pdfium-render = "0.8"         # PDF parsing + rasterisation robuste (DÉSACTIVÉ - problèmes libpdfium.dylib)
# opencv = { version = "0.92", features = ["clang-runtime"] }  # Détection texte EAST (à installer plus tard)

# === ALTERNATIVES PDF POUR macOS (sans dépendances externes) ===
# Alternative #1: lopdf (Pure Rust - RECOMMANDÉ)
lopdf = "0.32.0"              # Pure Rust PDF manipulation (Rust 2024 edition)

# Alternative #2: pdf-extract (Simple)
pdf-extract = "0.7.7"         # Simple text extraction (Pure Rust)

# Alternative #3: poppler-utils (via Command - nécessite: brew install poppler)
# Note: Pas de crate Rust, utilise pdftotext/pdftoppm via Command::new()

# Alternative #4: mupdf-rs (Performant - nécessite: brew install mupdf-tools)
# mupdf = "0.6.0"             # MuPDF bindings (AGPL license, décommenté si nécessaire)

# Utilitaires pour les alternatives PDF
# chrono déjà défini ligne 70

# Unicode normalization pour RAG
unicode-normalization = "0.1"  # Normalisation ligatures (ﬁ→fi, ﬂ→fl)

# Test dependencies
tempfile = "3.8"               # Fichiers temporaires pour tests

[[bin]]
name = "test_qdrant_simple"
path = "test_qdrant_simple.rs"

[[bin]]
name = "test_rest_only"
path = "test_rest_only.rs"

[[bin]]
name = "test_embedding_simple"
path = "test_embedding_simple.rs"

[[bin]]
name = "test_custom_e5"
path = "test_custom_e5.rs"

[[bin]]
name = "test_rag_pipeline_custom"
path = "test_rag_pipeline_custom.rs"

[[bin]]
name = "benchmark_custom_e5"
path = "benchmark_custom_e5.rs"

[[bin]]
name = "test_ocr_basic"
path = "test_ocr_basic.rs"

[[bin]]
name = "test_ocr_deepseek_pdf"
path = "test_ocr_deepseek_pdf.rs"

[[bin]]
name = "test_ocr_with_preview"
path = "test_ocr_with_preview.rs"

[[bin]]
name = "test_pdf_simple"
path = "test_pdf_simple.rs"

[[bin]]
name = "test_pdf_normalized"
path = "test_pdf_normalized.rs"

[[bin]]
name = "test_document_processor_phase1"
path = "test_document_processor_phase1.rs"

[[bin]]
name = "test_phase2_integration"
path = "test_phase2_integration.rs"

[[bin]]
name = "test_phase2_pdf_ocr_complete"
path = "test_phase2_pdf_ocr_complete.rs"

[[bin]]
name = "test_phase2_pdf_simple"
path = "test_phase2_pdf_simple.rs"

[[bin]]
name = "test_phase2_pdf_rag_complete"
path = "test_phase2_pdf_rag_complete.rs"

[[bin]]
name = "test_phase2_simplified_rag"
path = "test_phase2_simplified_rag.rs"

[[bin]]
name = "test_document_classifier"
path = "test_document_classifier.rs"

[[bin]]
name = "test_business_metadata"
path = "test_business_metadata.rs"

[[bin]]
name = "test_business_adaptive_chunking"
path = "test_business_adaptive_chunking.rs"

[[bin]]
name = "test_business_adaptive_chunking_real"
path = "test_business_adaptive_chunking_real.rs"

[[bin]]
name = "test_unicode_normalization"
path = "test_unicode_normalization.rs"

[[bin]]
name = "test_business_metadata_enhanced"
path = "test_business_metadata_enhanced.rs"

[[bin]]
name = "test_kpi_debug"
path = "test_kpi_debug.rs"

[[bin]]
name = "test_pipeline_complete_e2e"
path = "test_pipeline_complete_e2e.rs"
